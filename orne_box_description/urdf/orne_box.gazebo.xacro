<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="orne_box">
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:arg name="laser_visual" default="true"/>
  <xacro:arg name="imu_visual" default="false"/>
  <xacro:arg name="enable_camera" default="false"/>

  <gazebo reference="left_caster_wheel_link">
    <mu1>0.75</mu1>
    <mu2>0.75</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="right_caster_wheel_link">
    <mu1>0.75</mu1>
    <mu2>0.75</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <gazebo reference="left_wheel">
    <mu1>0.85</mu1>
    <mu2>0.85</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <mu1>0.85</mu1>
    <mu2>0.85</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/White</material>
  </gazebo>
  <!-- @TODO More clear boolean operation -->
    <!-- <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>orne_box</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
    </gazebo> -->
  
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_diff_drive.so">
        <always_on>true</always_on>
        <robotNamespace>/orne_box</robotNamespace>

        <!-- frame and cmd_vel -->
        <command_topic>cmd_vel</command_topic>
        <odometry_topic>odom</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <!-- <odometrySource>world</odometrySource> -->
        <robot_base_frame>base_footprint</robot_base_frame>
        <update_rate>30</update_rate>
        <!-- wheels -->
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <!-- kinematics -->
        <wheel_separation>0.46</wheel_separation>
        <wheel_diameter>0.304</wheel_diameter>
        <wheel_acceleration>1</wheel_acceleration>
        <max_wheel_torque>20</max_wheel_torque>
        <max_wheel_acceleration>1.0</max_wheel_acceleration>
        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>false</publish_wheel_tf>
      </plugin>
    </gazebo>

    <gazebo reference="base_link">
      <material>Gazebo/Orange</material>
    </gazebo>
    <!-- imu -->
    <gazebo reference="imu_link">
      <sensor type="imu" name="imu">
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <ros>
            <remapping>~/out:=imu/data</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>

        <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
      <material>Gazebo/Green</material>
    
    </gazebo>
    <!-- hokuyo -->
    <gazebo reference="hokuyo_link">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>$(arg laser_visual)</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>880</samples>
              <resolution>0.25</resolution>
              <min_angle>${-PI/180*110}</min_angle>
              <max_angle>${ PI/180*110}</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
            </vertical>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                 reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <frame_name>hokuyo_link</frame_name>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
      </sensor>
      <material>Gazebo/Black</material>
    </gazebo>
</robot>
